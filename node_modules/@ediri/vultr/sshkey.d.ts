import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr SSH key resource. This can be used to create, read, modify, and delete SSH keys.
 *
 * ## Example Usage
 *
 * Create an SSH key
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const mySshKey = new vultr.SSHKey("mySshKey", {sshKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyVGaw1PuEl98f4/7Kq3O9ZIvDw2OFOSXAFVqilSFNkHlefm1iMtPeqsIBp2t9cbGUf55xNDULz/bD/4BCV43yZ5lh0cUYuXALg9NI29ui7PEGReXjSpNwUD6ceN/78YOK41KAcecq+SS0bJ4b4amKZIJG3JWmDKljtv1dmSBCrTmEAQaOorxqGGBYmZS7NQumRe4lav5r6wOs8OACMANE1ejkeZsGFzJFNqvr5DuHdDL5FAudW23me3BDmrM9ifUzzjl1Jwku3bnRaCcjaxH8oTumt1a00mWci/1qUlaVFft085yvVq7KZbF2OPPbl+erDW91+EZ2FgEi+v1/CSJ5 your_username@hostname"});
 * ```
 *
 * ## Import
 *
 * SSH keys can be imported using the SSH key `ID`, e.g.
 *
 * ```sh
 * $ pulumi import vultr:index/sSHKey:SSHKey my_key 6b0876a7-f709-41ba-aed8-abed9d38ae45
 * ```
 */
export declare class SSHKey extends pulumi.CustomResource {
    /**
     * Get an existing SSHKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SSHKeyState, opts?: pulumi.CustomResourceOptions): SSHKey;
    /**
     * Returns true if the given object is an instance of SSHKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SSHKey;
    /**
     * The date the SSH key was added to your Vultr account.
     */
    readonly dateCreated: pulumi.Output<string>;
    /**
     * The name/label of the SSH key.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The public SSH key.
     */
    readonly sshKey: pulumi.Output<string>;
    /**
     * Create a SSHKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SSHKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SSHKey resources.
 */
export interface SSHKeyState {
    /**
     * The date the SSH key was added to your Vultr account.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * The name/label of the SSH key.
     */
    name?: pulumi.Input<string>;
    /**
     * The public SSH key.
     */
    sshKey?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SSHKey resource.
 */
export interface SSHKeyArgs {
    /**
     * The name/label of the SSH key.
     */
    name?: pulumi.Input<string>;
    /**
     * The public SSH key.
     */
    sshKey: pulumi.Input<string>;
}
