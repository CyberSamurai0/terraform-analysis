import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr database quota resource. This can be used to create, read, and delete quotas for a managed database on your Vultr account.
 *
 * ## Example Usage
 *
 * Create a new database quota:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myDatabaseQuota = new vultr.DatabaseQuota("myDatabaseQuota", {
 *     databaseId: vultr_database.my_database.id,
 *     clientId: "my_database_quota",
 *     consumerByteRate: 3,
 *     producerByteRate: 2,
 *     requestPercentage: 120,
 *     user: "my_database_user",
 * });
 * ```
 */
export declare class DatabaseQuota extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseQuota resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseQuotaState, opts?: pulumi.CustomResourceOptions): DatabaseQuota;
    /**
     * Returns true if the given object is an instance of DatabaseQuota.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseQuota;
    /**
     * The client ID for the new database quota.
     */
    readonly clientId: pulumi.Output<string>;
    /**
     * The consumer byte rate for the new managed database quota.
     */
    readonly consumerByteRate: pulumi.Output<number>;
    /**
     * The managed database ID you want to attach this quota to.
     */
    readonly databaseId: pulumi.Output<string>;
    /**
     * The producer byte rate for the new managed database quota.
     */
    readonly producerByteRate: pulumi.Output<number>;
    /**
     * The CPU request percentage for the new managed database quota.
     */
    readonly requestPercentage: pulumi.Output<number>;
    /**
     * The user for the new managed database quota.
     */
    readonly user: pulumi.Output<string>;
    /**
     * Create a DatabaseQuota resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseQuotaArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatabaseQuota resources.
 */
export interface DatabaseQuotaState {
    /**
     * The client ID for the new database quota.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The consumer byte rate for the new managed database quota.
     */
    consumerByteRate?: pulumi.Input<number>;
    /**
     * The managed database ID you want to attach this quota to.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * The producer byte rate for the new managed database quota.
     */
    producerByteRate?: pulumi.Input<number>;
    /**
     * The CPU request percentage for the new managed database quota.
     */
    requestPercentage?: pulumi.Input<number>;
    /**
     * The user for the new managed database quota.
     */
    user?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatabaseQuota resource.
 */
export interface DatabaseQuotaArgs {
    /**
     * The client ID for the new database quota.
     */
    clientId: pulumi.Input<string>;
    /**
     * The consumer byte rate for the new managed database quota.
     */
    consumerByteRate: pulumi.Input<number>;
    /**
     * The managed database ID you want to attach this quota to.
     */
    databaseId: pulumi.Input<string>;
    /**
     * The producer byte rate for the new managed database quota.
     */
    producerByteRate: pulumi.Input<number>;
    /**
     * The CPU request percentage for the new managed database quota.
     */
    requestPercentage: pulumi.Input<number>;
    /**
     * The user for the new managed database quota.
     */
    user: pulumi.Input<string>;
}
