import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Get information about a Vultr block storage subscription.
 *
 * ## Example Usage
 *
 * Get the information for a block storage subscription by `label`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myBlockStorage = vultr.getBlockStorage({
 *     filters: [{
 *         name: "label",
 *         values: ["my-block-storage-label"],
 *     }],
 * });
 * ```
 */
export declare function getBlockStorage(args?: GetBlockStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockStorageResult>;
/**
 * A collection of arguments for invoking getBlockStorage.
 */
export interface GetBlockStorageArgs {
    /**
     * Query parameters for finding block storage subscriptions.
     */
    filters?: inputs.GetBlockStorageFilter[];
}
/**
 * A collection of values returned by getBlockStorage.
 */
export interface GetBlockStorageResult {
    /**
     * The ID of the VPS the block storage subscription is attached to.
     */
    readonly attachedToInstance: string;
    /**
     * The type of block storage volume.
     */
    readonly blockType: string;
    /**
     * The cost per month of the block storage subscription in USD.
     */
    readonly cost: number;
    /**
     * The date the block storage subscription was added to your Vultr account.
     */
    readonly dateCreated: string;
    readonly filters?: outputs.GetBlockStorageFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The label of the block storage subscription.
     */
    readonly label: string;
    /**
     * An ID associated with the instance, when mounted the ID can be found in /dev/disk/by-id prefixed with virtio.
     */
    readonly mountId: string;
    /**
     * The region ID of the block storage subscription.
     */
    readonly region: string;
    /**
     * The size of the block storage subscription in GB.
     */
    readonly sizeGb: number;
    /**
     * The status of the block storage subscription.
     */
    readonly status: string;
}
/**
 * Get information about a Vultr block storage subscription.
 *
 * ## Example Usage
 *
 * Get the information for a block storage subscription by `label`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myBlockStorage = vultr.getBlockStorage({
 *     filters: [{
 *         name: "label",
 *         values: ["my-block-storage-label"],
 *     }],
 * });
 * ```
 */
export declare function getBlockStorageOutput(args?: GetBlockStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockStorageResult>;
/**
 * A collection of arguments for invoking getBlockStorage.
 */
export interface GetBlockStorageOutputArgs {
    /**
     * Query parameters for finding block storage subscriptions.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetBlockStorageFilterArgs>[]>;
}
