import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr database DB resource. This can be used to create, read, and delete logical DBs for a managed database on your Vultr account.
 *
 * ## Example Usage
 *
 * Create a new database DB:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myDatabaseDb = new vultr.DatabaseDb("myDatabaseDb", {databaseId: vultr_database.my_database.id});
 * ```
 */
export declare class DatabaseDb extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseDb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseDbState, opts?: pulumi.CustomResourceOptions): DatabaseDb;
    /**
     * Returns true if the given object is an instance of DatabaseDb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseDb;
    /**
     * The managed database ID you want to attach this logical DB to.
     */
    readonly databaseId: pulumi.Output<string>;
    /**
     * The name of the new managed database logical DB.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a DatabaseDb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseDbArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatabaseDb resources.
 */
export interface DatabaseDbState {
    /**
     * The managed database ID you want to attach this logical DB to.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * The name of the new managed database logical DB.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatabaseDb resource.
 */
export interface DatabaseDbArgs {
    /**
     * The managed database ID you want to attach this logical DB to.
     */
    databaseId: pulumi.Input<string>;
    /**
     * The name of the new managed database logical DB.
     */
    name?: pulumi.Input<string>;
}
