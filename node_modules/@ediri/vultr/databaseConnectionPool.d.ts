import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr database connection pool resource. This can be used to create, read, modify, and delete connection pools for a PostgreSQL managed database on your Vultr account.
 *
 * ## Example Usage
 *
 * Create a new database connection pool:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myDatabaseConnectionPool = new vultr.DatabaseConnectionPool("myDatabaseConnectionPool", {
 *     databaseId: vultr_database.my_database.id,
 *     database: "defaultdb",
 *     username: "vultradmin",
 *     mode: "transaction",
 *     size: 3,
 * });
 * ```
 */
export declare class DatabaseConnectionPool extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseConnectionPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseConnectionPoolState, opts?: pulumi.CustomResourceOptions): DatabaseConnectionPool;
    /**
     * Returns true if the given object is an instance of DatabaseConnectionPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseConnectionPool;
    /**
     * The logical database to use for the new managed database connection pool.
     */
    readonly database: pulumi.Output<string>;
    /**
     * The managed database ID you want to attach this connection pool to.
     */
    readonly databaseId: pulumi.Output<string>;
    /**
     * The mode to configure for the new managed database connection pool (`session`, `transaction`, `statement`).
     */
    readonly mode: pulumi.Output<string>;
    /**
     * The name of the new managed database connection pool.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The size of the new managed database connection pool.
     */
    readonly size: pulumi.Output<number>;
    /**
     * The database user to use for the new managed database connection pool.
     */
    readonly username: pulumi.Output<string>;
    /**
     * Create a DatabaseConnectionPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseConnectionPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatabaseConnectionPool resources.
 */
export interface DatabaseConnectionPoolState {
    /**
     * The logical database to use for the new managed database connection pool.
     */
    database?: pulumi.Input<string>;
    /**
     * The managed database ID you want to attach this connection pool to.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * The mode to configure for the new managed database connection pool (`session`, `transaction`, `statement`).
     */
    mode?: pulumi.Input<string>;
    /**
     * The name of the new managed database connection pool.
     */
    name?: pulumi.Input<string>;
    /**
     * The size of the new managed database connection pool.
     */
    size?: pulumi.Input<number>;
    /**
     * The database user to use for the new managed database connection pool.
     */
    username?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatabaseConnectionPool resource.
 */
export interface DatabaseConnectionPoolArgs {
    /**
     * The logical database to use for the new managed database connection pool.
     */
    database: pulumi.Input<string>;
    /**
     * The managed database ID you want to attach this connection pool to.
     */
    databaseId: pulumi.Input<string>;
    /**
     * The mode to configure for the new managed database connection pool (`session`, `transaction`, `statement`).
     */
    mode: pulumi.Input<string>;
    /**
     * The name of the new managed database connection pool.
     */
    name?: pulumi.Input<string>;
    /**
     * The size of the new managed database connection pool.
     */
    size: pulumi.Input<number>;
    /**
     * The database user to use for the new managed database connection pool.
     */
    username: pulumi.Input<string>;
}
