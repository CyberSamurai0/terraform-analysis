import * as pulumi from "@pulumi/pulumi";
/**
 * Create and update a Vultr container registry.
 *
 * ## Example Usage
 *
 * Create a new container registry:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const vcr1 = new vultr.ContainerRegistry("vcr1", {
 *     name: "examplecontainerregistry",
 *     plan: "start_up",
 *     "public": false,
 *     region: "sjc",
 * });
 * ```
 *
 * The `name` for container registries must be all lowercase and only contain alphanumeric characters.
 */
export declare class ContainerRegistry extends pulumi.CustomResource {
    /**
     * Get an existing ContainerRegistry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerRegistryState, opts?: pulumi.CustomResourceOptions): ContainerRegistry;
    /**
     * Returns true if the given object is an instance of ContainerRegistry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContainerRegistry;
    /**
     * A date-time of when the root user was created.
     */
    readonly dateCreated: pulumi.Output<string>;
    /**
     * The name for your container registry.  Must be lowercase and only alphanumeric characters.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The billing plan for the container registry. [See available plans](https://www.vultr.com/api/#tag/Container-Registry/operation/list-registry-plans)
     */
    readonly plan: pulumi.Output<string>;
    /**
     * Boolean indicating if the container registry should be created with public visibility or if it should require credentials.
     */
    readonly public: pulumi.Output<boolean>;
    /**
     * The region where your container registry will be deployed. [See available regions](https://www.vultr.com/api/#tag/Container-Registry/operation/list-registry-regions)
     */
    readonly region: pulumi.Output<string>;
    /**
     * The user associated with the container registry.
     */
    readonly rootUser: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * A listing of current storage usage relevant to the container registry.
     */
    readonly storage: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The URN of the container registry.
     */
    readonly urn: pulumi.Output<string>;
    /**
     * Create a ContainerRegistry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerRegistryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ContainerRegistry resources.
 */
export interface ContainerRegistryState {
    /**
     * A date-time of when the root user was created.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * The name for your container registry.  Must be lowercase and only alphanumeric characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The billing plan for the container registry. [See available plans](https://www.vultr.com/api/#tag/Container-Registry/operation/list-registry-plans)
     */
    plan?: pulumi.Input<string>;
    /**
     * Boolean indicating if the container registry should be created with public visibility or if it should require credentials.
     */
    public?: pulumi.Input<boolean>;
    /**
     * The region where your container registry will be deployed. [See available regions](https://www.vultr.com/api/#tag/Container-Registry/operation/list-registry-regions)
     */
    region?: pulumi.Input<string>;
    /**
     * The user associated with the container registry.
     */
    rootUser?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A listing of current storage usage relevant to the container registry.
     */
    storage?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The URN of the container registry.
     */
    urn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ContainerRegistry resource.
 */
export interface ContainerRegistryArgs {
    /**
     * The name for your container registry.  Must be lowercase and only alphanumeric characters.
     */
    name: pulumi.Input<string>;
    /**
     * The billing plan for the container registry. [See available plans](https://www.vultr.com/api/#tag/Container-Registry/operation/list-registry-plans)
     */
    plan: pulumi.Input<string>;
    /**
     * Boolean indicating if the container registry should be created with public visibility or if it should require credentials.
     */
    public: pulumi.Input<boolean>;
    /**
     * The region where your container registry will be deployed. [See available regions](https://www.vultr.com/api/#tag/Container-Registry/operation/list-registry-regions)
     */
    region: pulumi.Input<string>;
}
