import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr Serverless Inference resource. This can be used to create, read, modify, and delete managed inference subscriptions on your Vultr account.
 *
 * ## Example Usage
 *
 * Create a new inference subscription:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myInferenceSubscription = new vultr.Inference("myInferenceSubscription", {label: "my_inference_label"});
 * ```
 *
 * ## Import
 *
 * Inference subscriptions can be imported using the subscription's `ID`, e.g.
 *
 * ```sh
 * $ pulumi import vultr:index/inference:Inference my_inference_subscription b6a859c5-b299-49dd-8888-b1abbc517d08
 * ```
 */
export declare class Inference extends pulumi.CustomResource {
    /**
     * Get an existing Inference resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InferenceState, opts?: pulumi.CustomResourceOptions): Inference;
    /**
     * Returns true if the given object is an instance of Inference.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Inference;
    /**
     * The inference subscription's API key for accessing the Vultr Inference API.
     */
    readonly apiKey: pulumi.Output<string>;
    /**
     * The date the inference subscription was added to your Vultr account.
     */
    readonly dateCreated: pulumi.Output<string>;
    /**
     * A label for the inference subscription.
     */
    readonly label: pulumi.Output<string>;
    readonly usage: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Create a Inference resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InferenceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Inference resources.
 */
export interface InferenceState {
    /**
     * The inference subscription's API key for accessing the Vultr Inference API.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * The date the inference subscription was added to your Vultr account.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * A label for the inference subscription.
     */
    label?: pulumi.Input<string>;
    usage?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a Inference resource.
 */
export interface InferenceArgs {
    /**
     * A label for the inference subscription.
     */
    label: pulumi.Input<string>;
}
