"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInstanceIpv4Output = exports.getInstanceIpv4 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Get information about a Vultr instance IPv4.
 *
 * ## Example Usage
 *
 * Get the information for an IPv4 address by `instanceId`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myInstanceIpv4 = vultr.getInstanceIpv4({
 *     filters: [{
 *         name: "ip",
 *         values: ["123.123.123.123"],
 *     }],
 * });
 * ```
 */
function getInstanceIpv4(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getInstanceIpv4:getInstanceIpv4", {
        "filters": args.filters,
    }, opts);
}
exports.getInstanceIpv4 = getInstanceIpv4;
/**
 * Get information about a Vultr instance IPv4.
 *
 * ## Example Usage
 *
 * Get the information for an IPv4 address by `instanceId`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myInstanceIpv4 = vultr.getInstanceIpv4({
 *     filters: [{
 *         name: "ip",
 *         values: ["123.123.123.123"],
 *     }],
 * });
 * ```
 */
function getInstanceIpv4Output(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vultr:index/getInstanceIpv4:getInstanceIpv4", {
        "filters": args.filters,
    }, opts);
}
exports.getInstanceIpv4Output = getInstanceIpv4Output;
//# sourceMappingURL=getInstanceIpv4.js.map