import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr VPC resource. This can be used to create, read, and delete VPCs on your Vultr account.
 *
 * ## Example Usage
 *
 * Create a new VPC with an automatically generated CIDR block:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myVpc = new vultr.Vpc("myVpc", {
 *     description: "my vpc",
 *     region: "ewr",
 * });
 * ```
 *
 * Create a new VPC with a specified CIDR block:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myVpc = new vultr.Vpc("myVpc", {
 *     description: "my private vpc",
 *     region: "ewr",
 *     v4Subnet: "10.0.0.0",
 *     v4SubnetMask: 24,
 * });
 * ```
 *
 * ## Import
 *
 * VPCs can be imported using the VPC `ID`, e.g.
 *
 * ```sh
 * $ pulumi import vultr:index/vpc:Vpc my_vpc 0e04f918-575e-41cb-86f6-d729b354a5a1
 * ```
 */
export declare class Vpc extends pulumi.CustomResource {
    /**
     * Get an existing Vpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcState, opts?: pulumi.CustomResourceOptions): Vpc;
    /**
     * Returns true if the given object is an instance of Vpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Vpc;
    /**
     * The date that the VPC was added to your Vultr account.
     */
    readonly dateCreated: pulumi.Output<string>;
    /**
     * The description you want to give your VPC.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The region ID that you want the VPC to be created in.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The IPv4 subnet to be used when attaching instances to this VPC.
     */
    readonly v4Subnet: pulumi.Output<string>;
    /**
     * The number of bits for the netmask in CIDR notation. Example: 32
     */
    readonly v4SubnetMask: pulumi.Output<number>;
    /**
     * Create a Vpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Vpc resources.
 */
export interface VpcState {
    /**
     * The date that the VPC was added to your Vultr account.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * The description you want to give your VPC.
     */
    description?: pulumi.Input<string>;
    /**
     * The region ID that you want the VPC to be created in.
     */
    region?: pulumi.Input<string>;
    /**
     * The IPv4 subnet to be used when attaching instances to this VPC.
     */
    v4Subnet?: pulumi.Input<string>;
    /**
     * The number of bits for the netmask in CIDR notation. Example: 32
     */
    v4SubnetMask?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a Vpc resource.
 */
export interface VpcArgs {
    /**
     * The description you want to give your VPC.
     */
    description?: pulumi.Input<string>;
    /**
     * The region ID that you want the VPC to be created in.
     */
    region: pulumi.Input<string>;
    /**
     * The IPv4 subnet to be used when attaching instances to this VPC.
     */
    v4Subnet?: pulumi.Input<string>;
    /**
     * The number of bits for the netmask in CIDR notation. Example: 32
     */
    v4SubnetMask?: pulumi.Input<number>;
}
