import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Get information about a Vultr reserved IP address.
 *
 * ## Example Usage
 *
 * Get the information for a reserved IP by `label`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myReservedIp = vultr.getReservedIp({
 *     filters: [{
 *         name: "label",
 *         values: ["my-reserved-ip-label"],
 *     }],
 * });
 * ```
 */
export declare function getReservedIp(args?: GetReservedIpArgs, opts?: pulumi.InvokeOptions): Promise<GetReservedIpResult>;
/**
 * A collection of arguments for invoking getReservedIp.
 */
export interface GetReservedIpArgs {
    /**
     * Query parameters for finding reserved IP addresses.
     */
    filters?: inputs.GetReservedIpFilter[];
}
/**
 * A collection of values returned by getReservedIp.
 */
export interface GetReservedIpResult {
    readonly filters?: outputs.GetReservedIpFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the VPS the reserved IP is attached to.
     */
    readonly instanceId: string;
    /**
     * The IP type of the reserved IP.
     */
    readonly ipType: string;
    /**
     * The label of the reserved IP.
     */
    readonly label: string;
    /**
     * The ID of the region that the reserved IP is in.
     */
    readonly region: string;
    /**
     * The subnet of the reserved IP.
     */
    readonly subnet: string;
    /**
     * The subnet size of the reserved IP.
     */
    readonly subnetSize: number;
}
/**
 * Get information about a Vultr reserved IP address.
 *
 * ## Example Usage
 *
 * Get the information for a reserved IP by `label`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myReservedIp = vultr.getReservedIp({
 *     filters: [{
 *         name: "label",
 *         values: ["my-reserved-ip-label"],
 *     }],
 * });
 * ```
 */
export declare function getReservedIpOutput(args?: GetReservedIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservedIpResult>;
/**
 * A collection of arguments for invoking getReservedIp.
 */
export interface GetReservedIpOutputArgs {
    /**
     * Query parameters for finding reserved IP addresses.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetReservedIpFilterArgs>[]>;
}
