import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Vultr VPC 2.0 resource. This can be used to create, read, and delete VPCs 2.0 on your Vultr account.
 *
 * ## Example Usage
 *
 * Create a new VPC 2.0 with an automatically generated CIDR block:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myVpc2 = new vultr.Vpc2("myVpc2", {
 *     description: "my vpc2",
 *     region: "ewr",
 * });
 * ```
 *
 * Create a new VPC 2.0 with a specified CIDR block:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myVpc2 = new vultr.Vpc2("myVpc2", {
 *     description: "my private vpc2",
 *     ipBlock: "10.0.0.0",
 *     prefixLength: 24,
 *     region: "ewr",
 * });
 * ```
 *
 * ## Import
 *
 * VPCs 2.0 can be imported using the VPC 2.0 `ID`, e.g.
 *
 * ```sh
 * $ pulumi import vultr:index/vpc2:Vpc2 my_vpc2 0e04f918-575e-41cb-86f6-d729b354a5a1
 * ```
 */
export declare class Vpc2 extends pulumi.CustomResource {
    /**
     * Get an existing Vpc2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Vpc2State, opts?: pulumi.CustomResourceOptions): Vpc2;
    /**
     * Returns true if the given object is an instance of Vpc2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Vpc2;
    /**
     * The date that the VPC 2.0 was added to your Vultr account.
     */
    readonly dateCreated: pulumi.Output<string>;
    /**
     * The description you want to give your VPC 2.0.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The IPv4 subnet to be used when attaching instances to this VPC 2.0.
     */
    readonly ipBlock: pulumi.Output<string>;
    /**
     * Accepted values: `v4`.
     */
    readonly ipType: pulumi.Output<string>;
    /**
     * The number of bits for the netmask in CIDR notation. Example: 32
     */
    readonly prefixLength: pulumi.Output<number>;
    /**
     * The region ID that you want the VPC 2.0 to be created in.
     */
    readonly region: pulumi.Output<string>;
    /**
     * Create a Vpc2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Vpc2Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Vpc2 resources.
 */
export interface Vpc2State {
    /**
     * The date that the VPC 2.0 was added to your Vultr account.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * The description you want to give your VPC 2.0.
     */
    description?: pulumi.Input<string>;
    /**
     * The IPv4 subnet to be used when attaching instances to this VPC 2.0.
     */
    ipBlock?: pulumi.Input<string>;
    /**
     * Accepted values: `v4`.
     */
    ipType?: pulumi.Input<string>;
    /**
     * The number of bits for the netmask in CIDR notation. Example: 32
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * The region ID that you want the VPC 2.0 to be created in.
     */
    region?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Vpc2 resource.
 */
export interface Vpc2Args {
    /**
     * The description you want to give your VPC 2.0.
     */
    description?: pulumi.Input<string>;
    /**
     * The IPv4 subnet to be used when attaching instances to this VPC 2.0.
     */
    ipBlock?: pulumi.Input<string>;
    /**
     * Accepted values: `v4`.
     */
    ipType?: pulumi.Input<string>;
    /**
     * The number of bits for the netmask in CIDR notation. Example: 32
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * The region ID that you want the VPC 2.0 to be created in.
     */
    region: pulumi.Input<string>;
}
